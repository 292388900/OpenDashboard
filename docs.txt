    <section id="docs" class="docs section">
        <div class="container">
            <div class="docs-inner">

                    </p>
                    <h2 id="services" class="title text-center">Services</h2>

                    <h3>SessionService</h3>
                    <h4>Functions</h4>
                    <h5>isLoggedOut</h5>
                    <p>Returns true if the previous logged in user has logged out of the application.</p>

                    <h5>isAuthenticated</h5>
                    <p>Returns true if the app has authenticated the current session.</p>

                    <h5>isLTISession</h5>
                    <p>Returns true if the app has launched from an LTI.</p>

                    <h5>hasAdminRole</h5>
                    <p>Returns true if the user has admin priviledges.</p>

                    <h5>hasInstructorRole</h5>
                    <p>Returns true if the user has instructor priviledges.</p>

                    <h5>hasStudentRole</h5>
                    <p>Returns true if the user has student priviledges.</p>

                    <h5>authenticate</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>credentials : Object</li>
                    </ul>
                    <p>Sets the appropriate headers given the credentials and authenticates the user.</p>

                    <h5>isLTISession</h5>
                    <p>Returns true if the app has launched from an LTI.</p>

                    <h5>getCourse</h5>
                    <p>Returns the current Course object.</p>

                    <h5>getCurrentUser</h5>
                    <p>Returns the current User object.</p>

                    <h5>getInbound_LTI_Launch</h5>
                    <p>Returns an object containing the inbound LTI launch parameters.</p>

                    <h5>logout</h5>
                    <p>Logs the current user out of the application. Will invalidate session and delete all cookies.</p>

                    <h3>FeatureFlagService</h3>
                    <p>Use this service to determine which features have been activated during initialization.</p>

                    <h4>Functions</h4>

                    <h5>isFeatureActive</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>featureKey : String</li>
                    </ul>
                    <p>Returns true if application if featureKey is active.</p>

                    <h3>SettingService</h3>

                    <p>
                        Should not be used. Although fully functional, this is only shell of the future Admin Settings.
                        Admin Settings will set key value pairs, and persist the pairs in a the data store.
                    </p>

                    <h4>Functions</h4>

                    <h5>createSetting</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>setting : object</li>
                    </ul>
                    <p>Returns response with setting created. Setting will have an id, key, and value.</p>

                    <h5>updateSettings</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>settings : Array of setting objects</li>
                    </ul>
                    <p>Returns response with all settings updated in data store.</p>

                    <h5>getSettings</h5>
                    <p>Returns response with all settings persisted in data store.</p>

                    <h5>removeSetting</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>id : UUID</li>
                    </ul>
                    <p>Returns empty response.</p>

                    <h3>DashboardService</h3>

                    <p>Use this service to determine the data on a dashboard.</p>

                    <h4>Functions</h4>

                    <h5>getContextMappingById</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>contextMappingId : UUID</li>
                    </ul>
                    <p>Returns contextMapping with the given Id</p>
                    <h5>createPreconfigured</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>dashboard : object</li>
                    </ul>
                    <p>Creates a preconfigured dashboard with the dashboard object.</p>

                    <h5>updatePreconfigured</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>dashboard : object</li>
                    </ul>
                    <p>Updates a preconfigured dashboard with the dashboard object id.</p>

                    <h5>removePreconfigured</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>id : UUID</li>
                    </ul>
                    <p>Deletes a preconfigured dashboard with the dashboard id.</p>

                    <h5>getPreconfigured</h5>
                    <p>Returns all preconfigured dashobards.</p>

                    <h5>getPreconfiguredById</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>id : UUID</li>
                    </ul>
                    <p>Returns a preconfigured dashboard with the dashboard id.</p>

                    <h5>checkTitle</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>title : String</li>
                    </ul>
                    <p>Returns true if dashboard with a title exists in repository.</p>

                    <h3>ContextMappingService</h3>
                    <p>Use this service to create and maintain data on the contextMapping.</p>

                    <h4>Functions</h4>

                    <h5>createContextMappingInstance</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>options : object</li>
                    </ul>
                    <p>Returns contextMapping with the given options.</p>

                    <h5>create</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>contextMapping : object</li>
                    </ul>
                    <p>Creates a contextMapping.</p>

                    <h5>addDashboard</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>contextMapping : object</li>
                        <li>dashboard : object</li>
                    </ul>
                    <p>Adds a dashboard to the contextMapping.</p>

                    <h5>addCard</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>contextMapping : object</li>
                        <li>dashboard : object</li>
                        <li>card : object</li>
                    </ul>
                    <p>Adds a card to a dashboard on the contextMapping object.</p>

                    <h5>removeCard</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>contextMapping : object</li>
                        <li>dashboard : object</li>
                        <li>card : object</li>
                    </ul>
                    <p>Removes a card from a dashboard on the contextMapping object.</p>

                    <h5>get</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>key : UUID</li>
                    </ul>
                    <p>Returns a contextMapping if a context with the key exists.</p>

                    <h5>getById</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>id : UUID</li>
                    </ul>
                    <p>Returns a contextMapping if a context with the id exists.</p>

                    <h3>ProviderService</h3>
                    <p>Use this service to access the data providers.</p>

                    <h4>Functions</h4>

                    <h5>getProviderTypes</h5>
                    <p>Returns array of providers object.</p>

                    <h5>getProviders</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>type : string</li>
                    </ul>
                    <p>Returns a providers of the type parameter.</p>

                    <h5>getProvider</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>type : string</li>
                        <li>key : string</li>
                    </ul>
                    <p>Returns a provider of the type parameter with the key.</p>

                    <h5>getProviderDataByKey</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>type : string</li>
                        <li>key : string</li>
                    </ul>
                    <p>Returns the provider data of the type parameter with the key.</p>

                    <h5>getProviderDataByType</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>type : string</li>
                    </ul>
                    <p>Returns the provider data for all providers with the type parameter.</p>

                    <h5>create</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>providerData : object</li>
                    </ul>
                    <p>Creates a provider.</p>

                    <h5>update</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>providerData : object</li>
                    </ul>
                    <p>Updates a provider, based on that providers type and key.</p>

                    <h5>remove</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>providerData : object</li>
                    </ul>
                    <p>Removes a provider, based on that providers type and key.</p>

                    <h3>AssignmentService</h3>
                    <p>Use this service to access the assignment data.</p>

                    <h4>Functions</h4>

                    <h5>getAssignments</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>options : object</li>
                    </ul>
                    <p>Returns assignments that match the options.</p>

                    <h3>CourseDataService</h3>
                    <p>Use this service to get course data.</p>

                    <h4>Functions</h4>

                    <h5>getContexts</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>options : object</li>
                    </ul>
                    <p>Returns courses that match the options.</p>

                    <h5>getContext</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>options : object</li>
                        <li>contextId : object</li>
                    </ul>
                    <p>Returns course that match the options and context id.</p>

                    <h3>EventService</h3>
                    <p>Use this service to get event data for students and courses.</p>

                    <h4>Functions</h4>

                    <h5>getEventsForCourse</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>options : object</li>
                        <li>courseId : object</li>
                        <li>page : integer</li>
                        <li>size : integer</li>
                    </ul>
                    <p>Returns page of events for a course.</p>

                    <h5>getEventsForUser</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>options : object</li>
                        <li>userId : object</li>
                        <li>page : integer</li>
                        <li>size : integer</li>
                    </ul>
                    <p>Returns page of events for a user.</p>

                    <h5>getEventsForCourseAndUser</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>options : object</li>
                        <li>courseId : object</li>
                        <li>userId : object</li>
                        <li>page : integer</li>
                        <li>size : integer</li>
                    </ul>
                    <p>Returns page of events for a user in a course.</p>

                    <h3>ForumDataService</h3>
                    <p>Use this service to access forum data for a course.</p>

                    <h4>Functions</h4>

                    <h5>getForums</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>options : object</li>
                    </ul>
                    <p>Returns forums with options parameter.</p>

                    <h5>getMessages</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>options : object</li>
                        <li>topicId : id</li>
                    </ul>
                    <p>Returns messages on the forum with the topic id.</p>

                    <h3>ModelOutputDataService</h3>
                    <p>Access the model output with this service.</p>

                    <h4>Functions</h4>

                    <h5>getModelOutputForCourse</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>options : object</li>
                        <li>courseId : object</li>
                        <li>page : integer</li>
                        <li>size : integer</li>
                    </ul>
                    <p>Returns page of modelOutput for a the course id.</p>

                    <h5>getModelOutputForUser</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>options : object</li>
                        <li>userId : object</li>
                        <li>page : integer</li>
                        <li>size : integer</li>
                    </ul>
                    <p>Returns page of modelOutput for a user.</p>

                    <h2>OutcomesService</h2>
                    <h5>getOutcomesForCourse</h5>
                    <ul style="list-style-type:none">
                        <li>Parameters</li>
                        <li>options : object</li>
                    </ul>
                    <p>Returns outcomes for the options.</p>

                    <h2>RosterService</h2>
                    <p>Use this service to access roster data.<p>

                        <h4>Functions</h4>

                        <h5>getRoster</h5>
                        <ul style="list-style-type:none">
                            <li>Parameters</li>
                            <li>options : object</li>
                        </ul>
                    <p>Returns rosters for the options.</p>

                    <h3>dataService</h3>
                    <p>Use this service to check if dashboard already exists.</p>

                    <h4>
                        Functions<h4>

                            <h5>checkUniqueValue</h5>
                            <ul style="list-style-type:none">
                                <li>Parameters</li>
                                <li>dashboards : object</li>
                                <li>field : string</li>
                                <li>value : string</li>
                            </ul>
                            <p>Returns true if the values are unique for the field on a dashboard.</p>

                            <h2 id="security" class="title text-center">Security Profiles</h2>
                            <p>An in depth look at the security profiles. At least one security profile must be declared.</p>
                            <h3>saml</h3>
                            <p>OpenDashboard previously relied on Spring Security for all of the security with in the app. As of November 2015, we have introduced a new profile to the Security Assertion Markup Language. SAML is xml based an can be configured by editing the file src/main/resources/saml/saml.xml . Inorder to for the app to know that we are using this profile a flag must also be set. The flag features.saml can be set at the command line or in the properties file. Currently the saml implementation has only one user admin with the ADMIN role which has full access to OpenDashboard. Please look at documentation at OASIS for further configuration details.</p>

                            <h3>basic</h3>
                            <p>
                                The "basic" profile uses Spring Security.  Opendashboard uses Java based configuration for Spring Security. OpenDashboard currently support three users with three unique roles.
                                Each user can log in with access to features granted by their role.  Note that the only users with the ADMIN role may login into the Opendashboard admin portal. Please review the configuration file src/main/java/od/SecurityConfig.java
                                for the current implementation.   Documentation can be found on the  <a href="http://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/">Spring Security site</a> for further configuration details.
                            </p>

